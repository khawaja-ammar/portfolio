---
import { iconPaths } from "./SVGPaths";

export interface Props {
  icon: keyof typeof iconPaths;
  color?: string;
  size?: string;
  className?: string;
}

const {
  icon,
  size = "1.6em",
  className = "",
  color = "currentColor",
} = Astro.props;

const svgPath = iconPaths[icon] as string;

// Exact Content from the svg wrapper
const svgWrapper = svgPath.substring(4, svgPath.indexOf(">"));

const svgVals = svgWrapper.split('"');
let svgViewBox = "";
let svgFill = "";
for (let i = 0; i < svgVals.length; i++) {
  if (svgVals[i].includes("viewBox")) {
    svgViewBox = svgVals[i + 1];
  } else if (svgVals[i].includes("fill")) {
    svgFill = svgVals[i + 1];
  }
}

if (color !== "currentColor") {
  svgFill = color;
}

const svgVectors = svgPath.substring(
  svgPath.indexOf(">") + 1,
  svgPath.length - 6
);
---

<svg
  fill={svgFill}
  width={size}
  height={size}
  viewBox={svgViewBox}
  class={`aspect-square ${className} ${
    icon === "react" && "animate-react-logo-spin"
  }`}
>
  <g set:html={svgVectors} />
</svg>
